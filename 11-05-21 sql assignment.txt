sub queries   assignment
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
salesman table
+-------------+---------------------------+--------------+-----------+
| salesman_id | name                      | city         | commision |
+-------------+---------------------------+--------------+-----------+
|        5001 | James Hoog                | New York     | 0.15      |
|        5002 |          Nail Knite       |   Paris      | 0.13      |
|        5005 |          Pit Alex         | London       | 0.11      |
|        5006 |          Mc Lyon          |  Paris       | 0.14      |
|        5003 |          Lauson Hen       |  San Jose    | 0.12      |
|        5007 |          Paul Adam        | Rome         | 0.13      |
+-------------+---------------------------+--------------+-----------+
orders table
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70001 | 150.5     | 10/5/2012            |        3005 |        5002 |
|   70009 | 270.65    |              2012-09 |        3001 |        5005 |
|   70002 | 65.26     |             2012-10- |        3002 |        5001 |
|   70004 | 110.5     |          2012-08-17  |        3009 |        5003 |
|   70007 | 948.5     |           2012-09-10 |        3005 |        5002 |
|   70005 | 2400.6    |             2012-07- |        3007 |        5001 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70010 | 1983.43   |            2012-10-1 |        3004 |        5006 |
|   70003 | 2480.4    |            2012-10-1 |        3009 |        5003 |
|   70012 | 250.45    |             2012-06- |        3008 |        5002 |
|   70011 | 75.29     |              2012-08 |        3003 |        5007 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+

examples
-----========================================================================================================================================
1)Write a query to display all the orders for the salesman who belongs to the city London.

A) select * from orders
    -> where salesman_id=
    -> (select salesman_id from salesman where city='London');

+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70009 | 270.65    |              2012-09 |        3001 |        5005 |
+---------+-----------+----------------------+-------------+-------------+

2) Write a query to find all the orders issued against the salesman who may works for customer whose id is 3007.

A) SELECT * FROM ORDERS
    -> WHERE SALESMAN_ID=(SELECT DISTINCT SALESMAN_ID FROM ORDERS WHERE CUSROMER_ID=3007);
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70002 | 65.26     |             2012-10- |        3002 |        5001 |
|   70005 | 2400.6    |             2012-07- |        3007 |        5001 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+

3)Write a query to display all the orders which values are greater than the average order value for 10th October 2012

A)SELECT * FROM ORDERS WHERE PURCH_AMT>(SELECT AVG(PURCH_AMT) FROM ORDERS  WHERE ORD_DATE='10/5/2012');
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70009 | 270.65    |              2012-09 |        3001 |        5005 |
|   70007 | 948.5     |           2012-09-10 |        3005 |        5002 |
|   70005 | 2400.6    |             2012-07- |        3007 |        5001 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70010 | 1983.43   |            2012-10-1 |        3004 |        5006 |
|   70003 | 2480.4    |            2012-10-1 |        3009 |        5003 |
|   70012 | 250.45    |             2012-06- |        3008 |        5002 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+

4)Write a query to find all orders attributed to a salesman in New york

A)
 SELECT * FROM ORDERS
    -> WHERE SALESMAN_ID IN
    -> (SELECT SALESMAN_ID FROM SALESMAN WHERE CITY='New York');
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70002 | 65.26     |             2012-10- |        3002 |        5001 |
|   70005 | 2400.6    |             2012-07- |        3007 |        5001 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+

5)Write a query to display the commission of all the salesmen servicing customers in Paris

select  commision from salesman
    -> where salesman_id in(select salesman_id from customer where city='Paris');
+-----------+
| commision |
+-----------+
| 0.14      |
+-----------+

6) Write a query to count the customers with grades above New York's average. 

A) select grade ,count(*)
    -> from customer
    -> group by grade
    -> having grade >(select avg(grade) from customer where city='New York');
+-------+----------+
| grade | count(*) |
+-------+----------+
|   200 |        3 |
|   300 |        2 |
+-------+----------+

7)Write a query to extract the data from the orders table for those salesman who earned the maximum commission ?

A)select ord_num,purch_amt,ord_date,cusromer_id,salesman_id from orders
    -> where salesman_id in(select salesman_id from salesman where commision=(select max(commision) from salesman));
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70002 | 65.26     |             2012-10- |        3002 |        5001 |
|   70005 | 2400.6    |             2012-07- |        3007 |        5001 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+


8) Write a query to find the name and numbers of all salesmen who had more than one customer.

A)select salesman_id,name from salesman a
    -> where 1 <(select count(*) from customer where salesman_id=a.salesman_id);
+-------------+------------------------+
| salesman_id | name                   |
+-------------+------------------------+
|        5001 | James Hoog             |
|        5002 |          Nail Knite    |
+-------------+------------------------+
9) Write a query to find all orders with order amounts which are above-average amounts for their customers

A) select * from orders a
    -> where purch_amt>(select avg(purch_amt) from orders b where b.cusromer_id =a.cusromer_id);
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70007 | 948.5     |           2012-09-10 |        3005 |        5002 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70003 | 2480.4    |            2012-10-1 |        3009 |        5003 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+

10)Write a queries to find all orders with order amounts which are on or above-average amounts for their customers

A)select * from orders a
    -> where purch_amt>=(select avg(purch_amt) from orders b
    -> where b.cusromer_id=a.cusromer_id);
+---------+-----------+----------------------+-------------+-------------+
| ord_num | purch_amt | ord_date             | cusromer_id | salesman_id |
+---------+-----------+----------------------+-------------+-------------+
|   70009 | 270.65    |              2012-09 |        3001 |        5005 |
|   70007 | 948.5     |           2012-09-10 |        3005 |        5002 |
|   70005 | 2400.6    |             2012-07- |        3007 |        5001 |
|   70008 | 5760      |           2012-09-10 |        3002 |        5001 |
|   70010 | 1983.43   |            2012-10-1 |        3004 |        5006 |
|   70003 | 2480.4    |            2012-10-1 |        3009 |        5003 |
|   70012 | 250.45    |             2012-06- |        3008 |        5002 |
|   70011 | 75.29     |              2012-08 |        3003 |        5007 |
|   70013 | 3045.6    |       2012-04-25     |        3002 |        5001 |
+---------+-----------+----------------------+-------------+-------------+


============================================================================================================================================
                                                                                                                joins assignment
============================================================================================================================================
staff table
+----+------------+-----------+--------------+----------------+
| id | staff_name | staff_age | staff_adress | montly_package |
+----+------------+-----------+--------------+----------------+
|  1 | ARYAN      |        22 | MUMBAI       | 18000          |
|  2 | SUSHIL     |        32 | DELHI        | 20000          |
|  3 | MONTY      |        25 | MOHALI       | 22000          |
|  4 | AMIT       |        20 | ALLAHABAD    | 12000          |
+----+------------+-----------+--------------+----------------+
payment table
+------------+------------+----------+--------+
| payment_id | date       | staff_id | amount |
+------------+------------+----------+--------+
|        101 | 30/12/200  |        1 |   3000 |
|        102 | 22/02/2010 |        3 |   2500 |
|        103 | 23/02/2010 |        4 |   3500 |
+------------+------------+----------+--------+
===========================================================================================================================
left join
===========================================================================================================================
select staff.id,staff.staff_name,payment.staff_id from staff left join payment
    -> on staff.id = payment.staff_id;

+----+------------+----------+
| id | staff_name | staff_id |
+----+------------+----------+
|  1 | ARYAN      |        1 |
|  2 | SUSHIL     |     NULL |
|  3 | MONTY      |        3 |
|  4 | AMIT       |        4 |
+----+------------+----------+
===========================================================================================================================
right join
===========================================================================================================================
select staff.id,staff.staff_name,payment.staff_id from staff right join payment
    -> on staff.id = payment.staff_id;
+------+------------+----------+
| id   | staff_name | staff_id |
+------+------------+----------+
|    1 | ARYAN      |        1 |
|    3 | MONTY      |        3 |
|    4 | AMIT       |        4 |
+------+------------+----------+
===========================================================================================================================
inner join
===========================================================================================================================
 select staff.id,staff.staff_name,payment.payment_id,payment.staff_id from staff inner join payment
    -> on staff.id = payment.staff_id;
---+------------+------------+----------+
| id | staff_name | payment_id | staff_id |
+----+------------+------------+----------+
|  1 | ARYAN      |        101 |        1 |
|  3 | MONTY      |        102 |        3 |
|  4 | AMIT       |        103 |        4 |
+----+------------+------------+----------+

=============================================================================================================================================
                                                                                                                     create a table hotel menu
=============================================================================================================================================
 create table menuhotel (ID int not null, NAME varchar
    -> (30),RATE varchar(30));
Query OK, 0 rows affected (0.09 sec)

mysql> desc menuhotel;
+-------+-------------+------+-----+---------+-------+
| Field | Type        | Null | Key | Default | Extra |
+-------+-------------+------+-----+---------+-------+
| ID       |int(11)           | NO|       | NULL    |              |
|NAME|varchar(30) | YES|       | NULL    |              |
| RATE |varchar(30)  | YES|       | NULL    |              |
+-------+-------------+------+-----+---------+-------+

 alter table menuhotel add type_food varchar(30),place varchar(30);

Afrer adding two colums by using alter,type of food,place,

 desc menuhotel;
+-----------+-------------+------+-----+---------+-------+
| Field       | Type           |Null | Key | Default | Extra |
+-----------+-------------+------+-----+---------+-------+
| ID             |int(11)         |  NO  |        | NULL    |               |
| NAME    |varchar(30) | YES  |        | NULL    |               |
| RATE       |varchar(30) | YES  |        | NULL    |               |
|typefod  |varchar(30) | YES  |        | NULL    |               |
| place      |varchar(30) | YES  |        | NULL    |               |
+-----------+-------------+------+-----+---------+-------+

select * from menuhotel;
+-----+--------------------------+-----------+---------------------------------------+-------------------+
| ID  | NAME                               | RATE       | type_food                                           | place                    |
+-----+--------------------+-----------------+---------------------------------------+--------------------+
| 123 | Hyderabadi briyani   |         360  | rise iteam                                           | hyderabad          |
| 258 | paubaji                           |          55   | fastfood                                              | mumbai                |
| 963 | sambar                           |          80   | curries                                                 | chennai                 |
| 789 | Butta Bojanam            |         350  | south indian meals iteams         | hyderabad           |
| 456 | putarakulu                   |         100  | snakes sweets                                  | andhra pradesh |
+-----+--------------------------+-----------+--------------------------------------+---------------------+













